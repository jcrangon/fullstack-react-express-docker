networks:
  app-net:
    driver: bridge

volumes:
  pg_data:
  mongo_data:
  upload_data:

services:
  client:
    build: ./client
    container_name: fs_client
    working_dir: /app
    environment:
      - VITE_API_URL=http://localhost:8080
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - api
    command: ["npm","run","dev","--","--host"]
    networks: [app-net]

  api:
    build: ./server
    container_name: fs_api
    working_dir: /usr/src/app
    environment:
      NODE_ENV: development
      PORT: 8080
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/appdb?schema=public
      MONGO_URL: mongodb://mongo:27017/appdb
      JWT_ACCESS_SECRET: dev_access_secret_change_me
      JWT_REFRESH_SECRET: dev_refresh_secret_change_me
      ACCESS_TOKEN_TTL: 15m
      REFRESH_TOKEN_TTL: 7d
      COOKIE_DOMAIN: localhost
      CORS_ORIGIN: http://localhost:5173
      UPLOAD_DIR: /usr/src/app/uploads
    ports:
      - "8080:8080"
      - "5555:5555"   # Prisma Studio (optionnel)
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
      - upload_data:/usr/src/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_started
    command: ["npm","run","dev"]
    networks: [app-net]

  postgres:
    image: postgres:16-alpine
    container_name: fs_postgres
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d appdb"]
      interval: 5s
      timeout: 3s
      retries: 20
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks: [app-net]

  mongo:
    image: mongo:7
    container_name: fs_mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks: [app-net]